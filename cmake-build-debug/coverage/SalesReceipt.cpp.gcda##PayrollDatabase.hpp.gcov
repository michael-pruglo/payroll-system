        -:    0:Source:C:/Users/mickl/ClionProjects/payroll-system/src/Database/PayrollDatabase.hpp
        -:    0:Graph:C:\Users\mickl\ClionProjects\payroll-system\cmake-build-debug\tests\CMakeFiles\google_test.dir\Transactions\SalesReceipt.cpp.gcno
        -:    0:Data:C:\Users\mickl\ClionProjects\payroll-system\cmake-build-debug\tests\CMakeFiles\google_test.dir\Transactions\SalesReceipt.cpp.gcda
        -:    0:Runs:1
        -:    1:#ifndef PAYROLL_SYSTEM_PAYROLLDATABASE_HPP
        -:    2:#define PAYROLL_SYSTEM_PAYROLLDATABASE_HPP
        -:    3:
        -:    4:
        -:    5:#include <unordered_map>
        -:    6:#include <stdexcept>
        -:    7:#include <memory>
        -:    8:#include <sstream>
        -:    9:#include "../Employee/Employee.hpp"
        -:   10:
        -:   11:class PayrollDatabase
        -:   12:{
        -:   13:public:
        -:   14:    virtual ~PayrollDatabase() = default;
        -:   15:
        -:   16:    void                        addEmployee(int id, std::shared_ptr<Employee> employee);
        -:   17:    std::shared_ptr<Employee>   getEmployee(int id) const;
        -:   18:    void                        updateEmployee(int id, std::shared_ptr<Employee> newEmployee);
        -:   19:    void                        deleteEmployee(int id);
    #####:   20:    auto                        size() const { return database.size(); }
    %%%%%:   20-block  0
    #####:   21:    void                        clear() { database.clear(); }
    %%%%%:   21-block  0
        -:   22:
        -:   23:public: //exceptions
        -:   24:    class not_found;
        -:   25:    class add_duplicate;
        -:   26:
        -:   27:
        -:   28:private:
        -:   29:    std::unordered_map<int, std::shared_ptr<Employee>> database;
        -:   30:
        -:   31:    //Singleton
        -:   32:private:
        -:   33:    PayrollDatabase() = default;
        -:   34:    static std::shared_ptr<PayrollDatabase> _instance;
        -:   35:public:
        -:   36:    PayrollDatabase(PayrollDatabase& other) = delete;
        -:   37:    void operator=(const PayrollDatabase& other) = delete;
        -:   38:    static std::shared_ptr<PayrollDatabase> getInstance();
        -:   39:
        -:   40:};
        -:   41:
        -:   42:class PayrollDatabase::not_found : public std::runtime_error
        -:   43:{
        -:   44:public:
        -:   45:    explicit not_found(int id) :
        -:   46:        std::runtime_error("Payroll Database: not_found id = "+std::to_string(id))
        -:   47:    {}
        -:   48:};
        -:   49:class PayrollDatabase::add_duplicate : public std::runtime_error
        -:   50:{
        -:   51:public:
        -:   52:    explicit add_duplicate(int id) :
        -:   53:        std::runtime_error("Payroll Database: add_duplicate id = "+std::to_string(id))
        -:   54:    {}
        -:   55:};
        -:   56:
        -:   57:
        -:   58:#endif //PAYROLL_SYSTEM_PAYROLLDATABASE_HPP
