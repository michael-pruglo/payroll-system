        -:    0:Source:C:/Users/mickl/ClionProjects/payroll-system/src/Transactions/ChangeEmployeeTransaction.hpp
        -:    0:Graph:C:\Users\mickl\ClionProjects\payroll-system\cmake-build-debug\tests\CMakeFiles\google_test.dir\Transactions\ChangeEmployeeTest.cpp.gcno
        -:    0:Data:C:\Users\mickl\ClionProjects\payroll-system\cmake-build-debug\tests\CMakeFiles\google_test.dir\Transactions\ChangeEmployeeTest.cpp.gcda
        -:    0:Runs:1
        -:    1:#ifndef PAYROLL_SYSTEM_CHANGEEMPLOYEETRANSACTION_HPP
        -:    2:#define PAYROLL_SYSTEM_CHANGEEMPLOYEETRANSACTION_HPP
        -:    3:
        -:    4:
        -:    5:#include "Transaction.hpp"
        -:    6:#include "../Employee/Employee.hpp"
        -:    7:
        -:    8:class ChangeEmployeeTransaction : public Transaction
        -:    9:{
        -:   10:public:
        9:   11:    explicit ChangeEmployeeTransaction(int id) : id(id) {}
        9:   11-block  0
        9:   12:    virtual ~ChangeEmployeeTransaction() = default;
        9:   12-block  0
        -:   13:
        -:   14:    virtual void execute() override;
        -:   15:    virtual void change(std::shared_ptr<Employee>) = 0;
        -:   16:
        -:   17:private:
        -:   18:    int id;
        -:   19:};
        -:   20:
        -:   21:class ChangeNameTransaction : public ChangeEmployeeTransaction
        -:   22:{
        -:   23:public:
        1:   24:    ChangeNameTransaction(int id, const std::string& newName) : ChangeEmployeeTransaction(id), newName(newName) {}
        1:   24-block  0
        1:   24-block  1
    $$$$$:   24-block  2
        -:   25:    void change(std::shared_ptr<Employee> employee) override;
        -:   26:
        -:   27:private:
        -:   28:    std::string newName;
        -:   29:};
        -:   30:
        -:   31:class ChangeAddressTransaction : public ChangeEmployeeTransaction
        -:   32:{
        -:   33:public:
        1:   34:    ChangeAddressTransaction(int id, const std::string& newAddress) : ChangeEmployeeTransaction(id), newAddress(newAddress) {}
        1:   34-block  0
        1:   34-block  1
    $$$$$:   34-block  2
        -:   35:    void change(std::shared_ptr<Employee> employee) override;
        -:   36:
        -:   37:private:
        -:   38:    std::string newAddress;
        -:   39:};
        -:   40:
        -:   41:class ChangeClassificationTransaction : public ChangeEmployeeTransaction
        -:   42:{
        -:   43:public:
        3:   44:    ChangeClassificationTransaction(int id) : ChangeEmployeeTransaction(id) {}
        3:   44-block  0
        3:   45:    virtual ~ChangeClassificationTransaction() = default;
        3:   45-block  0
        -:   46:
        -:   47:    void change(std::shared_ptr<Employee> ptr) override;
        -:   48:    virtual std::shared_ptr<PaymentClassification> getClassification() const = 0;
        -:   49:    virtual std::shared_ptr<PaymentSchedule> getSchedule() const = 0;
        -:   50:};
        -:   51:
        -:   52:class ChangeToHourlyTransaction : public ChangeClassificationTransaction
        -:   53:{
        -:   54:public:
        1:   55:    ChangeToHourlyTransaction(int id, double hRate) : ChangeClassificationTransaction(id), hRate(hRate) {}
        1:   55-block  0
        -:   56:    std::shared_ptr<PaymentClassification> getClassification() const override;
        -:   57:    std::shared_ptr<PaymentSchedule> getSchedule() const override;
        -:   58:private:
        -:   59:    double hRate;
        -:   60:};
        -:   61:class ChangeToSalariedTransaction : public ChangeClassificationTransaction
        -:   62:{
        -:   63:public:
        1:   64:    ChangeToSalariedTransaction(int id, double sSalary) : ChangeClassificationTransaction(id), sSalary(sSalary) {}
        1:   64-block  0
        -:   65:    std::shared_ptr<PaymentClassification> getClassification() const override;
        -:   66:    std::shared_ptr<PaymentSchedule> getSchedule() const override;
        -:   67:private:
        -:   68:    double sSalary;
        -:   69:};
        -:   70:class ChangeToCommissionedTransaction : public ChangeClassificationTransaction
        -:   71:{
        -:   72:public:
        1:   73:    ChangeToCommissionedTransaction(int id, double cSalary, double cRate) :
        -:   74:        ChangeClassificationTransaction(id),
        -:   75:        cSalary(cSalary),
        1:   76:        cRate(cRate)
        1:   76-block  0
        1:   77:    {}
        -:   78:
        -:   79:    std::shared_ptr<PaymentClassification> getClassification() const override;
        -:   80:    std::shared_ptr<PaymentSchedule> getSchedule() const override;
        -:   81:private:
        -:   82:    double cSalary, cRate;
        -:   83:};
        -:   84:
        -:   85:class ChangeMethodTransaction : public ChangeEmployeeTransaction
        -:   86:{
        -:   87:public:
        4:   88:    ChangeMethodTransaction(int id) : ChangeEmployeeTransaction(id) {}
        4:   88-block  0
        4:   89:    virtual ~ChangeMethodTransaction() override = default;
        4:   89-block  0
        -:   90:    void change(std::shared_ptr<Employee> employee) override;
        -:   91:    virtual std::shared_ptr<PaymentMethod> getPaymentMethod() = 0;
        -:   92:};
        -:   93:class ChangeToDirectMethodTransaction : public ChangeMethodTransaction
        -:   94:{
        -:   95:public:
        -:   96:    ChangeToDirectMethodTransaction(int id, std::string bank, int account);
        -:   97:    std::shared_ptr<PaymentMethod> getPaymentMethod() override;
        -:   98:private:
        -:   99:    std::string bank;
        -:  100:    int account;
        -:  101:};
        -:  102:class ChangeToMailMethodTransaction : public ChangeMethodTransaction
        -:  103:{
        -:  104:public:
        -:  105:    ChangeToMailMethodTransaction(int id, std::string address);
        -:  106:    std::shared_ptr<PaymentMethod> getPaymentMethod() override;
        -:  107:private:
        -:  108:    std::string address;
        -:  109:};
        -:  110:class ChangeToHoldMethodTransaction : public ChangeMethodTransaction
        -:  111:{
        -:  112:public:
        -:  113:    ChangeToHoldMethodTransaction(int id);
        -:  114:    std::shared_ptr<PaymentMethod> getPaymentMethod() override;
        -:  115:};
        -:  116:
        -:  117:#endif //PAYROLL_SYSTEM_CHANGEEMPLOYEETRANSACTION_HPP
